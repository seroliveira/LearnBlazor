@page "/blazorjs"
@inject IJSRuntime _JSRuntime

<h3>Blazorjs</h3>

<div class="row">
	<button class="btn btn-secondary" @onclick="TestConfirmBox">Test Confirm Button</button>
</div>

<div class="row">
	@if (ConfirmResult)
	{
		<p>Confirmation has been made!</p>
	}
	else
	{
		<p>Pending confirmation.</p>
	}
</div>

<div class="row">
	<button class="btn btn-success m-2" style="width: 200px" @onclick="ToastrSuccess">Toastr Success</button>
	<button class="btn btn-danger m-2" style="width: 200px" @onclick="ToastrError">Toastr Failure</button>
</div>

<div class="row">
	<button class="btn btn-success m-2" style="width: 200px" @onclick="SweetalertSuccess">Sweetalert Success</button>
	<button class="btn btn-danger m-2" style="width: 200px" @onclick="SweetalertError">Sweetalert Failure</button>
</div>

@code {
	public string ConfirmMessage { get; set; } = "Are you sure you want to click here?";

	private bool ConfirmResult { get; set; }

	private async Task TestConfirmBox()
	{
		ConfirmResult = await _JSRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
	}

	private async Task ToastrSuccess()
	{
		// await _JSRuntime.InvokeVoidAsync("showToastr", "success", "Success Notification");
		await _JSRuntime.ToastrSuccess("Success Notification");
	}

	private async Task ToastrError()
	{
		// await _JSRuntime.InvokeVoidAsync("showToastr", "error", "Error Notification");
		await _JSRuntime.ToastrError("Error Notification");
	}

	private async Task SweetalertSuccess()
	{
		// await _JSRuntime.InvokeVoidAsync("ShowSwal", "success", "Task completed!");
		await _JSRuntime.SweetAlertSuccess("Success Notification");
	}

	private async Task SweetalertError()
	{
		// await _JSRuntime.InvokeVoidAsync("ShowSwal", "error", "Task failed.");
		await _JSRuntime.SweetAlertError("Error Notification");
	}
}
